{"project":{"commands":[{"father":"execScriptPython","command":"import pandas as pd\nfrom openpyxl import load_workbook\nfrom openpyxl.styles import PatternFill\n\n# Ruta al archivo de Excel\narchivo_excel = 'C:/Users/MaritzaCenobio/Desktop/ConciliacionProveedores/AUXILIARES JUL24.xlsx'\n\n# Hojas a procesar\nhojas = ['PV NAC MN CAN', 'PV NAC MN COR', 'PV NAC MN MEX', 'PV NAC MN SJD', \n         'PV NAC MN MXL', 'PV NAC MN GDL', 'PV NAC MN MTY']\n#, 'PV NAC MN TIJ'\n# Cargar el libro de Excel\nwb = load_workbook(archivo_excel)\n\n# Estilo de relleno amarillo\nyellow_fill = PatternFill(start_color=\"FFFF00\", end_color=\"FFFF00\", fill_type=\"solid\")\n\n# Procesar cada hoja individualmente\nfor hoja in hojas:\n    # Leer los datos de la hoja específica\n    df = pd.read_excel(archivo_excel, sheet_name=hoja, skiprows=6)\n    ws = wb[hoja]\n    \n    # Crear sets para valores únicos en 'Cargos' y 'Abonos' dentro de la hoja\n    cargos_unicos = set(df['Cargos'])\n    abonos_unicos = set(df['Abonos'])\n    \n    # Encontrar intersección entre cargos y abonos dentro de la hoja\n    valores_comunes = cargos_unicos.intersection(abonos_unicos)\n    \n    # Iterar sobre las filas para colorear las coincidencias dentro de la hoja\n    for index, row in df.iterrows():\n        if row['Cargos'] in valores_comunes:\n            # Colorear la celda de 'Cargos'\n            ws.cell(row=index + 8, column=df.columns.get_loc('Cargos') + 1).fill = yellow_fill\n        \n        if row['Abonos'] in valores_comunes:\n            # Colorear la celda de 'Abonos'\n            ws.cell(row=index + 8, column=df.columns.get_loc('Abonos') + 1).fill = yellow_fill\n\n# Guardar el archivo de Excel con los cambios\nwb.save('C:/Users/MaritzaCenobio/Desktop/ConciliacionProveedores/AUXILIARES JUL24.xlsx')\n\nprint(\"Proceso completado. Las celdas coloreadas se guardaron en 'AUXILIARESCOLOR JUL24.xlsx'.\")\n","index":0,"execute_debugg":0,"img":"","screenshot":"","line":1,"description":"","stop_onerror":false,"run_onerror":false,"stop_robot_onerror":false,"run_onerror_robot":"","run_when":"True","id":"0dcc898d-90a6-6b9c-26a4-eb51d1c10503","group":"scripts","mode_live":false,"children":[],"else":[],"execute":2,"message":"","time":"1.4473237991333008","extra":[]}],"ifs":[],"modules":[],"profile":{"name":"movAuxiliares","description":""},"vars":[],"expose":{"title":{"en":"movAuxiliares expose","es":"movAuxiliares expose","pr":"movAuxiliares expose"},"description":{"en":"","es":"","pr":""},"form":[]}}}